{"version":3,"file":"static/js/779.5c5968fb.chunk.js","mappings":"qOAEaA,E,OAAcC,GAAAA,GAAH,6C,SCyCxB,MArCA,WACE,OAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAEMC,GADQC,EAAAA,EAAAA,MACQD,QAQtB,OANAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAmBH,GAChBI,MAAK,SAAAC,GAAI,OAAIN,EAAeM,EAAKC,QAAxB,IACTC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACR,KAGF,yBAC0B,IAAvBF,EAAYa,QACX,uBAAG,yCAEH,+BACGb,QADH,IACGA,OADH,EACGA,EAAac,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OAChB,UAACpB,EAAD,YACE,0BAAI,WAASmB,MACb,uBAAIC,MAFYF,EADF,OAU3B,C,sJCjCD,IAAMG,EAAS,mCACTC,EAAM,+BAEL,SAASC,IACd,IACE,OAAOC,MAAM,GAAD,OAAIF,EAAJ,qCAAoCD,IAAUZ,MAAK,SAAAgB,GAAQ,OACrEA,EAASC,MAD4D,GAKxE,CAFC,MAAOb,GACP,MAAM,IAAIc,MAAMd,EAAMe,QACvB,CACF,CAEM,SAASC,EAAkBxB,GAChC,IACE,OAAOmB,MAAM,GAAD,OAAIF,EAAJ,kBAAiBjB,EAAjB,oBAAoCgB,IAAUZ,MAAK,SAAAgB,GAAQ,OACrEA,EAASC,MAD4D,GAKxE,CAFC,MAAOb,GACP,MAAM,IAAIc,MAAMd,EAAMe,QACvB,CACF,CAEM,SAASE,EAAgBzB,GAC9B,IACE,OAAOmB,MAAM,GAAD,OAAIF,EAAJ,kBAAiBjB,EAAjB,4BAA4CgB,IAAUZ,MAChE,SAAAgB,GAAQ,OAAIA,EAASC,MAAb,GAIX,CAFC,MAAOb,GACP,MAAM,IAAIc,MAAMd,EAAMe,QACvB,CACF,CAEM,SAASpB,EAAmBH,GACjC,IACE,OAAOmB,MAAM,GAAD,OAAIF,EAAJ,kBAAiBjB,EAAjB,4BAA4CgB,IAAUZ,MAChE,SAAAgB,GAAQ,OAAIA,EAASC,MAAb,GAIX,CAFC,MAAOb,GACP,MAAM,IAAIc,MAAMd,EAAMe,QACvB,CACF,CAEM,SAASG,EAAkBC,GAChC,IACE,OAAOR,MAAM,GAAD,OACPF,EADO,iCACqBD,EADrB,kBACqCW,IAC/CvB,MAAK,SAAAgB,GAAQ,OAAIA,EAASC,MAAb,GAGhB,CAFC,MAAOb,GACP,MAAM,IAAIc,MAAMd,EAAMe,QACvB,CACF,C","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","servise/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const RewievsItem = styled.li`\n  list-style: none;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMoviesReviews } from 'servise/api';\nimport PropTypes from 'prop-types';\nimport { RewievsItem } from './Reviews.styled';\n\nfunction Reviews() {\n  const [reviewsInfo, setReviewsInfo] = useState([]);\n  const param = useParams();\n  const movieId = param.movieId;\n\n  useEffect(() => {\n    fetchMoviesReviews(movieId)\n      .then(data => setReviewsInfo(data.results))\n      .catch(error => console.log(error));\n  }, [movieId]);\n\n  return (\n    <div>\n      {reviewsInfo.length === 0 ? (\n        <p>There are no reviews for this movie</p>\n      ) : (\n        <ul>\n          {reviewsInfo?.map(({ id, author, content }) => (\n            <RewievsItem key={id}>\n              <h2>Author: {author}</h2>\n              <p>{content}</p>\n            </RewievsItem>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n\nReviews.propTypes = {\n  reviewsInfo: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    author: PropTypes.string.isRequired,\n    content: PropTypes.string.isRequired,\n  }),\n};\n\nexport default Reviews;\n","const APIKEY = 'a62f5be583049dd9d23498f3821d50e8';\nconst URL = 'https://api.themoviedb.org/3';\n\nexport function fetchTrendingMovies() {\n  try {\n    return fetch(`${URL}/trending/all/day?api_key=${APIKEY}`).then(response =>\n      response.json()\n    );\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n\nexport function fetchMoviesDetals(movieId) {\n  try {\n    return fetch(`${URL}/movie/${movieId}?api_key=${APIKEY}`).then(response =>\n      response.json()\n    );\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n\nexport function fetchMoviesCast(movieId) {\n  try {\n    return fetch(`${URL}/movie/${movieId}/credits?api_key=${APIKEY}`).then(\n      response => response.json()\n    );\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n\nexport function fetchMoviesReviews(movieId) {\n  try {\n    return fetch(`${URL}/movie/${movieId}/reviews?api_key=${APIKEY}`).then(\n      response => response.json()\n    );\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n\nexport function fetchSearchMovies(queryMovies) {\n  try {\n    return fetch(\n      `${URL}/search/movie?api_key=${APIKEY}&query=${queryMovies}`\n    ).then(response => response.json());\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n"],"names":["RewievsItem","styled","useState","reviewsInfo","setReviewsInfo","movieId","useParams","useEffect","fetchMoviesReviews","then","data","results","catch","error","console","log","length","map","id","author","content","APIKEY","URL","fetchTrendingMovies","fetch","response","json","Error","message","fetchMoviesDetals","fetchMoviesCast","fetchSearchMovies","queryMovies"],"sourceRoot":""}