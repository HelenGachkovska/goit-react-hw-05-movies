{"version":3,"file":"static/js/304.6cb867ad.chunk.js","mappings":"0PAGaA,EAAOC,EAAAA,GAAAA,GAAH,6CAIJC,GAAWD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,mJAURG,EAAQH,EAAAA,GAAAA,GAAH,uF,SCyBlB,MApCA,WACE,OAAoCI,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACMC,GAAWC,EAAAA,EAAAA,MAQjB,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MACGC,MAAK,SAAAC,GAAI,OAAIN,EAAcM,EAAKC,QAAvB,IACTC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,KAGD,4BACE,SAACZ,EAAD,UAAO,oBACP,+BACGE,QADH,IACGA,OADH,EACGA,EAAYa,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAd,OACf,SAACtB,EAAD,WACE,SAACE,EAAD,CAAUqB,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMjB,GAA9C,SACGa,GAASC,KAFHF,EADI,QAUxB,C,sJC9BD,IAAMM,EAAS,mCACTC,EAAM,+BAEL,SAAShB,IACd,IACE,OAAOiB,MAAM,GAAD,OAAID,EAAJ,qCAAoCD,IAAUd,MAAK,SAAAiB,GAAQ,OACrEA,EAASC,MAD4D,GAKxE,CAFC,MAAOd,GACP,MAAM,IAAIe,MAAMf,EAAMgB,QACvB,CACF,CAEM,SAASC,EAAkBC,GAChC,IACE,OAAON,MAAM,GAAD,OAAID,EAAJ,kBAAiBO,EAAjB,oBAAoCR,IAAUd,MAAK,SAAAiB,GAAQ,OACrEA,EAASC,MAD4D,GAKxE,CAFC,MAAOd,GACP,MAAM,IAAIe,MAAMf,EAAMgB,QACvB,CACF,CAEM,SAASG,EAAgBD,GAC9B,IACE,OAAON,MAAM,GAAD,OAAID,EAAJ,kBAAiBO,EAAjB,4BAA4CR,IAAUd,MAChE,SAAAiB,GAAQ,OAAIA,EAASC,MAAb,GAIX,CAFC,MAAOd,GACP,MAAM,IAAIe,MAAMf,EAAMgB,QACvB,CACF,CAEM,SAASI,EAAmBF,GACjC,IACE,OAAON,MAAM,GAAD,OAAID,EAAJ,kBAAiBO,EAAjB,4BAA4CR,IAAUd,MAChE,SAAAiB,GAAQ,OAAIA,EAASC,MAAb,GAIX,CAFC,MAAOd,GACP,MAAM,IAAIe,MAAMf,EAAMgB,QACvB,CACF,CAEM,SAASK,EAAkBC,GAChC,IACE,OAAOV,MAAM,GAAD,OACPD,EADO,iCACqBD,EADrB,kBACqCY,IAC/C1B,MAAK,SAAAiB,GAAQ,OAAIA,EAASC,MAAb,GAGhB,CAFC,MAAOd,GACP,MAAM,IAAIe,MAAMf,EAAMgB,QACvB,CACF,C","sources":["pages/Home/Home.styled.js","pages/Home/Home.jsx","servise/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Item = styled.li`\n  list-style: none;\n`;\n\nexport const ItemLink = styled(Link)`\n  font-size: 20px;\n  font-weight: 400;\n  text-decoration: none;\n  color: #000;\n  :hover {\n    font-weight: 500;\n  }\n`;\n\nexport const Title = styled.h1`\n  margin-left: 30px;\n  font-size: 30px;\n  font-weight: 700;\n`;\n","import { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { fetchTrendingMovies } from 'servise/api';\nimport PropTypes from 'prop-types';\nimport { Item, ItemLink, Title } from './Home.styled';\n\nfunction Home() {\n  const [moviesData, setMoviesData] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    fetchTrendingMovies()\n      .then(data => setMoviesData(data.results))\n      .catch(error => console.log(error));\n  }, []);\n\n  return (\n    <div>\n      <Title>Trending today</Title>\n      <ul>\n        {moviesData?.map(({ id, title, name }) => (\n          <Item key={id}>\n            <ItemLink to={`/movies/${id}`} state={{ from: location }}>\n              {title || name}\n            </ItemLink>\n          </Item>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nHome.propTypes = {\n  moviesData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default Home;\n","const APIKEY = 'a62f5be583049dd9d23498f3821d50e8';\nconst URL = 'https://api.themoviedb.org/3';\n\nexport function fetchTrendingMovies() {\n  try {\n    return fetch(`${URL}/trending/all/day?api_key=${APIKEY}`).then(response =>\n      response.json()\n    );\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n\nexport function fetchMoviesDetals(movieId) {\n  try {\n    return fetch(`${URL}/movie/${movieId}?api_key=${APIKEY}`).then(response =>\n      response.json()\n    );\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n\nexport function fetchMoviesCast(movieId) {\n  try {\n    return fetch(`${URL}/movie/${movieId}/credits?api_key=${APIKEY}`).then(\n      response => response.json()\n    );\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n\nexport function fetchMoviesReviews(movieId) {\n  try {\n    return fetch(`${URL}/movie/${movieId}/reviews?api_key=${APIKEY}`).then(\n      response => response.json()\n    );\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n\nexport function fetchSearchMovies(queryMovies) {\n  try {\n    return fetch(\n      `${URL}/search/movie?api_key=${APIKEY}&query=${queryMovies}`\n    ).then(response => response.json());\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n"],"names":["Item","styled","ItemLink","Link","Title","useState","moviesData","setMoviesData","location","useLocation","useEffect","fetchTrendingMovies","then","data","results","catch","error","console","log","map","id","title","name","to","state","from","APIKEY","URL","fetch","response","json","Error","message","fetchMoviesDetals","movieId","fetchMoviesCast","fetchMoviesReviews","fetchSearchMovies","queryMovies"],"sourceRoot":""}