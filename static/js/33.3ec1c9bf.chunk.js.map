{"version":3,"file":"static/js/33.3ec1c9bf.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","servise/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const ButtonLink = styled(Link)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 120px;\n  height: 30px;\n  font-size: 20px;\n  margin-left: 30px;\n  margin-top: 20px;\n  text-decoration: none;\n  cursor: pointer;\n  border-radius: 4px;\n  border: 1px solid #7e7d7d;\n  background-color: #d1d1d1;\n  color: #000;\n\n  :hover {\n    box-shadow: 0px 2px 3px rgba(0, 0, 0, 0.12), 0px 2px 3px rgba(0, 0, 0, 0.14),\n      0px 2px 3px rgba(0, 0, 0, 0.2);\n  }\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  margin-left: 30px;\n  margin-top: 20px;\n  padding-bottom: 20px;\n  gap: 30px;\n  border-bottom: 2px solid #000;\n`;\n\nexport const MovieInfo = styled.div`\n  padding: 20px 40px;\n`;\n\nexport const InfoBox = styled.div`\n  margin-left: 30px;\n  padding: 10px 10px 10px 0;\n  border-bottom: 2px solid #000;\n`;\n\nexport const InfoLink = styled(Link)`\n  text-decoration: none;\n  color: #000;\n  :hover {\n    font-weight: 500;\n  }\n`;\n\nexport const InfoItem = styled.li`\n  list-style: none;\n`;\n\nexport const InfoList = styled.ul`\n  padding: 0;\n`;\n\nexport const Text = styled.p`\n  margin-left: 30px;\n`;\n","import { Suspense, useEffect, useRef, useState } from 'react';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { fetchMoviesDetals } from 'servise/api';\nimport PropTypes from 'prop-types';\nimport {\n  ButtonLink,\n  Container,\n  MovieInfo,\n  InfoBox,\n  InfoLink,\n  InfoItem,\n  InfoList\n} from './MovieDetails.styled';\n\nfunction MovieDetails() {\n  const [movieDetails, setMovieDetails] = useState('');\n  const param = useParams();\n  const movieId = param.movieId;\n  const location = useLocation();\n  const backLincLocationRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    fetchMoviesDetals(movieId)\n      .then(data => setMovieDetails(data))\n      .catch(error => console.log(error));\n  }, [movieId]);\n\n  console.log(movieDetails);\n\n  const { title, overview, genres, poster_path, name, vote_average } =\n    movieDetails;\n\n  // if (!title && !name) {\n  //   return (\n  //     <>\n  //       <ButtonLink to={backLincLocationRef.current}>Go back</ButtonLink>\n  //       <Suspense fallback={<div>Loading...</div>}>\n  //         <Text>Sorry, no movie information found</Text>\n  //         </Suspense>\n  //     </>\n  //   );\n  // }\n\n  return (\n    <>\n      <ButtonLink to={backLincLocationRef.current}>Go back</ButtonLink>\n      <Container>\n        <img\n          src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n          alt={title}\n          width={320}\n          height={380}\n        ></img>\n\n        <MovieInfo>\n          <h1>{title || name}</h1>\n          <h3>User score: {vote_average}%</h3>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h3>Genres: </h3>\n          {genres?.map(({ id, name }) => (\n            <span key={id}>{`${name}, `}</span>\n          ))}\n        </MovieInfo>\n      </Container>\n\n      <InfoBox>\n        <h4>Additional information</h4>\n        <InfoList>\n          <InfoItem>\n            <InfoLink to={'Cast'}>Cast</InfoLink>\n          </InfoItem>\n          <InfoItem>\n            <InfoLink to={'Reviews'}>Reviews</InfoLink>\n          </InfoItem>\n        </InfoList>\n      </InfoBox>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n}\n\nMovieDetails.propTypes = {\n  movieDetails: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    poster_path: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n    vote_average: PropTypes.number,\n    overview: PropTypes.string.isRequired,\n  }),\n\n  genres: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n  }),\n};\n\nexport default MovieDetails;\n","const APIKEY = 'a62f5be583049dd9d23498f3821d50e8';\nconst URL = 'https://api.themoviedb.org/3';\n\nexport function fetchTrendingMovies() {\n  try {\n    return fetch(`${URL}/trending/all/day?api_key=${APIKEY}`).then(response =>\n      response.json()\n    );\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n\nexport function fetchMoviesDetals(movieId) {\n  try {\n    return fetch(`${URL}/movie/${movieId}?api_key=${APIKEY}`).then(response =>\n      response.json()\n    );\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n\nexport function fetchMoviesCast(movieId) {\n  try {\n    return fetch(`${URL}/movie/${movieId}/credits?api_key=${APIKEY}`).then(\n      response => response.json()\n    );\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n\nexport function fetchMoviesReviews(movieId) {\n  try {\n    return fetch(`${URL}/movie/${movieId}/reviews?api_key=${APIKEY}`).then(\n      response => response.json()\n    );\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n\nexport function fetchSearchMovies(queryMovies) {\n  try {\n    return fetch(\n      `${URL}/search/movie?api_key=${APIKEY}&query=${queryMovies}`\n    ).then(response => response.json());\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n"],"names":["ButtonLink","styled","Link","Container","MovieInfo","InfoBox","InfoLink","InfoItem","InfoList","useState","movieDetails","setMovieDetails","movieId","useParams","location","useLocation","backLincLocationRef","useRef","state","from","useEffect","fetchMoviesDetals","then","data","catch","error","console","log","title","overview","genres","poster_path","name","vote_average","to","current","src","alt","width","height","map","id","Suspense","fallback","APIKEY","URL","fetchTrendingMovies","fetch","response","json","Error","message","fetchMoviesCast","fetchMoviesReviews","fetchSearchMovies","queryMovies"],"sourceRoot":""}