{"version":3,"file":"static/js/387.9b65ccc2.chunk.js","mappings":"qOAEaA,E,OAAWC,GAAAA,GAAH,qG,SC8CrB,MA1CA,WAAiB,IAAD,EACd,GAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAEMC,GADQC,EAAAA,EAAAA,MACQD,QAQtB,OANAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBH,GACbI,MAAK,SAAAC,GAAI,OAAIN,EAAYM,EAAhB,IACTC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACP,KAGF,kCACGF,EAASY,YADZ,aACG,EAAeC,KACd,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,cAAeC,EAApC,EAAoCA,UAAWC,EAA/C,EAA+CA,WAA/C,OACE,UAACrB,EAAD,YACE,gBACEsB,IAAG,2DAAsDJ,GACzDK,IAAKJ,KAEP,4BACE,0BAAI,IAAEA,MACN,yBAAG,cAAYC,MACf,yBAAG,eAAaC,UARLJ,EADjB,KAgBP,C,sJCpCD,IAAMO,EAAS,mCACTC,EAAM,+BAEL,SAASC,IACd,IACE,OAAOC,MAAM,GAAD,OAAIF,EAAJ,qCAAoCD,IAAUf,MAAK,SAAAmB,GAAQ,OACrEA,EAASC,MAD4D,GAKxE,CAFC,MAAOjB,GACP,MAAM,IAAIkB,MAAMlB,EAAMmB,QACvB,CACF,CAEM,SAASC,EAAkB3B,GAChC,IACE,OAAOsB,MAAM,GAAD,OAAIF,EAAJ,kBAAiBpB,EAAjB,oBAAoCmB,IAAUf,MAAK,SAAAmB,GAAQ,OACrEA,EAASC,MAD4D,GAKxE,CAFC,MAAOjB,GACP,MAAM,IAAIkB,MAAMlB,EAAMmB,QACvB,CACF,CAEM,SAASvB,EAAgBH,GAC9B,IACE,OAAOsB,MAAM,GAAD,OAAIF,EAAJ,kBAAiBpB,EAAjB,4BAA4CmB,IAAUf,MAChE,SAAAmB,GAAQ,OAAIA,EAASC,MAAb,GAIX,CAFC,MAAOjB,GACP,MAAM,IAAIkB,MAAMlB,EAAMmB,QACvB,CACF,CAEM,SAASE,EAAmB5B,GACjC,IACE,OAAOsB,MAAM,GAAD,OAAIF,EAAJ,kBAAiBpB,EAAjB,4BAA4CmB,IAAUf,MAChE,SAAAmB,GAAQ,OAAIA,EAASC,MAAb,GAIX,CAFC,MAAOjB,GACP,MAAM,IAAIkB,MAAMlB,EAAMmB,QACvB,CACF,CAEM,SAASG,EAAkBC,GAChC,IACE,OAAOR,MAAM,GAAD,OACPF,EADO,iCACqBD,EADrB,kBACqCW,IAC/C1B,MAAK,SAAAmB,GAAQ,OAAIA,EAASC,MAAb,GAGhB,CAFC,MAAOjB,GACP,MAAM,IAAIkB,MAAMlB,EAAMmB,QACvB,CACF,C","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","servise/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastItem = styled.li`\n  list-style: none;\n  display: flex;\n  gap: 20px;\n  margin-bottom: 20px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMoviesCast } from 'servise/api';\nimport PropTypes from 'prop-types';\nimport { CastItem } from './Cast.styled';\n\nfunction Cast() {\n  const [castInfo, setCastInfo] = useState('');\n  const param = useParams();\n  const movieId = param.movieId;\n\n  useEffect(() => {\n    fetchMoviesCast(movieId)\n      .then(data => setCastInfo(data))\n      .catch(error => console.log(error));\n  }, [movieId]);\n\n  return (\n    <ul>\n      {castInfo.cast?.map(\n        ({ id, profile_path, original_name, character, popularity }) => (\n          <CastItem key={id}>\n            <img\n              src={`https://www.themoviedb.org/t/p/w276_and_h350_face${profile_path}`}\n              alt={original_name}\n            />\n            <div>\n              <h2> {original_name}</h2>\n              <p>Character: {character}</p>\n              <p>Popularity: {popularity}</p>\n            </div>\n          </CastItem>\n        )\n      )}\n    </ul>\n  );\n}\n\nCast.propTypes = {\n  castInfo: PropTypes.shape({\n    original_name: PropTypes.string.isRequired,\n    character: PropTypes.string.isRequired,\n    profile_path: PropTypes.string,\n    id: PropTypes.number.isRequired,\n    popularity: PropTypes.number,\n  }),\n};\n\nexport default Cast;\n","const APIKEY = 'a62f5be583049dd9d23498f3821d50e8';\nconst URL = 'https://api.themoviedb.org/3';\n\nexport function fetchTrendingMovies() {\n  try {\n    return fetch(`${URL}/trending/all/day?api_key=${APIKEY}`).then(response =>\n      response.json()\n    );\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n\nexport function fetchMoviesDetals(movieId) {\n  try {\n    return fetch(`${URL}/movie/${movieId}?api_key=${APIKEY}`).then(response =>\n      response.json()\n    );\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n\nexport function fetchMoviesCast(movieId) {\n  try {\n    return fetch(`${URL}/movie/${movieId}/credits?api_key=${APIKEY}`).then(\n      response => response.json()\n    );\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n\nexport function fetchMoviesReviews(movieId) {\n  try {\n    return fetch(`${URL}/movie/${movieId}/reviews?api_key=${APIKEY}`).then(\n      response => response.json()\n    );\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n\nexport function fetchSearchMovies(queryMovies) {\n  try {\n    return fetch(\n      `${URL}/search/movie?api_key=${APIKEY}&query=${queryMovies}`\n    ).then(response => response.json());\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n"],"names":["CastItem","styled","useState","castInfo","setCastInfo","movieId","useParams","useEffect","fetchMoviesCast","then","data","catch","error","console","log","cast","map","id","profile_path","original_name","character","popularity","src","alt","APIKEY","URL","fetchTrendingMovies","fetch","response","json","Error","message","fetchMoviesDetals","fetchMoviesReviews","fetchSearchMovies","queryMovies"],"sourceRoot":""}